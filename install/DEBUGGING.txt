########################################################################################################################
#
# The GPIOTest program (included in this directory) uses the same GPIO logic as the AppDaemon, but
#   without other actions (such as taking down the net interface).
#
# Use it to verify your hardware settings before modifying /etc/rc.local
#
./GPIOTest --config-gpio=7 --led-gpio=24

#
# The following table outlines the COMPLETELY CONFUSING numbering schemes used on
#   the RasPi. Which system is used depends on your version of library, the model
#   if Pi you're using, and probably the phase of the moon.
#
# Keep trying things until you figure out which numbering system is being used,
#   and then stick with that. Try the BCM numbering scheme first.
#
 +-----+-----+---------+------+---+---Pi 4B--+---+------+---------+-----+-----+
 | BCM | wPi |   Name  | Mode | V | Physical | V | Mode | Name    | wPi | BCM |
 +-----+-----+---------+------+---+----++----+---+------+---------+-----+-----+
 |     |     |    3.3v |      |   |  1 || 2  |   |      | 5v      |     |     |
 |   2 |   8 |   SDA.1 |   IN | 1 |  3 || 4  |   |      | 5v      |     |     |
 |   3 |   9 |   SCL.1 |   IN | 1 |  5 || 6  |   |      | 0v      |     |     |
 |   4 |   7 | GPIO. 7 |   IN | 1 |  7 || 8  | 1 | IN   | TxD     | 15  | 14  |
 |     |     |      0v |      |   |  9 || 10 | 1 | IN   | RxD     | 16  | 15  |
 |  17 |   0 | GPIO. 0 |  OUT | 0 | 11 || 12 | 0 | IN   | GPIO. 1 | 1   | 18  |
 |  27 |   2 | GPIO. 2 |   IN | 0 | 13 || 14 |   |      | 0v      |     |     |
 |  22 |   3 | GPIO. 3 |   IN | 0 | 15 || 16 | 0 | IN   | GPIO. 4 | 4   | 23  |
 |     |     |    3.3v |      |   | 17 || 18 | 0 | IN   | GPIO. 5 | 5   | 24  |
 |  10 |  12 |    MOSI |   IN | 0 | 19 || 20 |   |      | 0v      |     |     |
 |   9 |  13 |    MISO |   IN | 0 | 21 || 22 | 0 | IN   | GPIO. 6 | 6   | 25  |
 |  11 |  14 |    SCLK |   IN | 0 | 23 || 24 | 1 | IN   | CE0     | 10  | 8   |
 |     |     |      0v |      |   | 25 || 26 | 1 | IN   | CE1     | 11  | 7   |
 |   0 |  30 |   SDA.0 |   IN | 1 | 27 || 28 | 1 | IN   | SCL.0   | 31  | 1   |
 |   5 |  21 | GPIO.21 |   IN | 1 | 29 || 30 |   |      | 0v      |     |     |
 |   6 |  22 | GPIO.22 |   IN | 1 | 31 || 32 | 0 | IN   | GPIO.26 | 26  | 12  |
 |  13 |  23 | GPIO.23 |   IN | 0 | 33 || 34 |   |      | 0v      |     |     |
 |  19 |  24 | GPIO.24 |  OUT | 0 | 35 || 36 | 0 | IN   | GPIO.27 | 27  | 16  |
 |  26 |  25 | GPIO.25 |   IN | 0 | 37 || 38 | 0 | IN   | GPIO.28 | 28  | 20  |
 |     |     |      0v |      |   | 39 || 40 | 0 | IN   | GPIO.29 | 29  | 21  |
 +-----+-----+---------+------+---+----++----+---+------+---------+-----+-----+
 | BCM | wPi |   Name  | Mode | V | Physical | V | Mode | Name    | wPi | BCM |
 +-----+-----+---------+------+---+---Pi 4B--+---+------+---------+-----+-----+


########################################################################################################################
#
# If you're having trouble with the deamon itself, you can run it directly without the nohup.
#   As root, just type the command found in rc.local:
#
cd /root/bin
killall /usr/bin/perl                                # Stop any demons already running
AppDaemon -v  -r --config-gpio=5 --led-gpio=19 --user=pi /home/pi/SampleApp

# The "-v" is verbose, and should print out useful messages as things happen, such as when you press the GPIO button
# or the user saves changes.
# 
# The "-r" means do *not* reboot after the user makes changes and presses the reboot button on the web page.
# 
# This allows you to test the web interface then examine the saved config files without waiting for the reboot
# and possibly changing the network config.

########################################################################################################################
#
# The following commands will run the configuration process outright, without having to press the GPIO
#   or take down the interfaces. This allows you to debug the config system over ssh.
#
# From ssh:
#
killall /usr/bin/perl
cd /root/AppDaemon/public_html
python3 -m http.server 80     &
/root/AppDaemon/bin/ConfigServer -r -v &

#
# The "-r" option to the ConfigServer means it will not reboot after save, which is useful for
#   debugging over ssh.
#


########################################################################################################################
#
# The following command will periodically scan and print out AP SSID's
#
# Run this from a command prompt on your laptop (linux) to continuously scan for APs while
#   debugging the AppDaemon
#
watch -n5 "iwlist wlan0 scan | grep -i ESSID"

